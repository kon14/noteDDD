version: '3.9'
services:
  note_ddd:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: noteddd
    image: noteddd:latest
    restart: unless-stopped
    ports:
      - '${API_PORT:-4000}:4000'
    environment:
      DATABASE_URL: 'postgres://${DB_USER:-noteddd}:${DB_PASS:-pass}@postgres:${DB_PORT:-5432}/${DB_NAME:-noteddd}'
      API_PORT: '${API_PORT:-4000}'
      API_BASE_URL: '${API_BASE_URL:-http://localhost:4000}'
      AUTH_JWT_SECRET: '${AUTH_JWT_SECRET:-7h3 c4k3 15 4 l13}'
      AUTH_ACCESS_TOKEN_DURATION_SECS: '${AUTH_ACCESS_TOKEN_DURATION_SECS:-3600}'
      AUTH_REFRESH_TOKEN_DURATION_SECS: '${AUTH_REFRESH_TOKEN_DURATION_SECS:-604800}'
    depends_on:
      postgres:
        condition: service_healthy
      # One-off exiting container race condition breaks dependency graph.
      # db_migrations:
      #   condition: service_completed_successfully # (requires Compose CLI v2)

  postgres:
    container_name: 'noteddd-postgres'
    image: postgres:17.5
    restart: unless-stopped
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${DB_NAME:-noteddd}'
      POSTGRES_USER: '${DB_USER:-noteddd}'
      POSTGRES_PASSWORD: '${DB_PASS:-pass}'
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${DB_USER:-noteddd}' ]
      interval: 5s
      timeout: 3s
      retries: 5

  db_migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    container_name: noteddd-db-migrations
    image: noteddd-db-migrations:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: 'postgres://${DB_USER:-noteddd}:${DB_PASS:-pass}@postgres:${DB_PORT:-5432}/${DB_NAME:-noteddd}'

volumes:
  postgres:
    external: false
